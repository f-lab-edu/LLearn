"""add tag, curriculum

Revision ID: fa6efaad942d
Revises: 9e48abd53979
Create Date: 2025-08-02 00:45:44.689815

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fa6efaad942d'
down_revision: Union[str, Sequence[str], None] = '9e48abd53979'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_category_active_sort', 'categories', ['is_active', 'sort_order'], unique=False)
    op.create_index('idx_category_name', 'categories', ['name'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_tag_created_by', 'tags', ['created_by'], unique=False)
    op.create_index('idx_tag_name', 'tags', ['name'], unique=False)
    op.create_index('idx_tag_usage_count', 'tags', ['usage_count'], unique=False)
    op.create_table('curriculum_categories',
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('curriculum_id', sa.String(length=26), nullable=False),
    sa.Column('category_id', sa.String(length=26), nullable=False),
    sa.Column('assigned_by', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['curriculum_id'], ['curriculums.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('curriculum_id', name='unique_curriculum_category')
    )
    op.create_index('idx_curriculum_category_assigned_by', 'curriculum_categories', ['assigned_by'], unique=False)
    op.create_index('idx_curriculum_category_category', 'curriculum_categories', ['category_id'], unique=False)
    op.create_index('idx_curriculum_category_curriculum', 'curriculum_categories', ['curriculum_id'], unique=False)
    op.create_table('curriculum_tags',
    sa.Column('id', sa.String(length=26), nullable=False),
    sa.Column('curriculum_id', sa.String(length=26), nullable=False),
    sa.Column('tag_id', sa.String(length=26), nullable=False),
    sa.Column('added_by', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['added_by'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['curriculum_id'], ['curriculums.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('curriculum_id', 'tag_id', name='unique_curriculum_tag')
    )
    op.create_index('idx_curriculum_tag_added_by', 'curriculum_tags', ['added_by'], unique=False)
    op.create_index('idx_curriculum_tag_curriculum', 'curriculum_tags', ['curriculum_id'], unique=False)
    op.create_index('idx_curriculum_tag_tag', 'curriculum_tags', ['tag_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_curriculum_tag_tag', table_name='curriculum_tags')
    op.drop_index('idx_curriculum_tag_curriculum', table_name='curriculum_tags')
    op.drop_index('idx_curriculum_tag_added_by', table_name='curriculum_tags')
    op.drop_table('curriculum_tags')
    op.drop_index('idx_curriculum_category_curriculum', table_name='curriculum_categories')
    op.drop_index('idx_curriculum_category_category', table_name='curriculum_categories')
    op.drop_index('idx_curriculum_category_assigned_by', table_name='curriculum_categories')
    op.drop_table('curriculum_categories')
    op.drop_index('idx_tag_usage_count', table_name='tags')
    op.drop_index('idx_tag_name', table_name='tags')
    op.drop_index('idx_tag_created_by', table_name='tags')
    op.drop_table('tags')
    op.drop_index('idx_category_name', table_name='categories')
    op.drop_index('idx_category_active_sort', table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
